<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Microk8s on tlake.io</title><link>https://tlake.io/tags/microk8s/</link><description>Recent content in Microk8s on tlake.io</description><generator>Hugo</generator><language>en-us</language><copyright>Tanner Lake</copyright><lastBuildDate>Mon, 19 Aug 2024 14:20:53 -0700</lastBuildDate><atom:link href="https://tlake.io/tags/microk8s/index.xml" rel="self" type="application/rss+xml"/><item><title>Microk8s Cluster: Forwarding From One Traefik Instance To Another</title><link>https://tlake.io/blog/microk8s-cluster-forwarding-from-one-traefik-instance-to-another/</link><pubDate>Mon, 19 Aug 2024 00:00:00 -0700</pubDate><guid>https://tlake.io/blog/microk8s-cluster-forwarding-from-one-traefik-instance-to-another/</guid><description>Starting state Docker swarm Traefik (current front door) Running on the primary/manager swarm node Exposed via static IP Current container applications Microk8s cluster (the &amp;ldquo;thicket&amp;rdquo;) Traefik (future front door) Able to run on any node in the thicket Exposed via k8s service allocating a static IP through metallb New container applications Home router forwarding all incoming :80 and :443 traffic to the docker swarm&amp;rsquo;s manager node&amp;rsquo;s static IP address What I don&amp;rsquo;t want Switching between routing all web traffic to either the swarm traefik or the thicket traefik Fully migrating every application before switching traffic as above, then troubleshooting every application at the same time What I do want Migrating applications one at a time from the docker swarm to the thicket Testing/troubleshooting a single migrated application without interrupting other applications Maintaining availability for applications not yet migrated The solution: a TCP router and service in the dynamic config file Make sure the static config has the file provider enabled:</description></item><item><title>Microk8s Cluster: Databases and NFS Storage</title><link>https://tlake.io/blog/microk8s-cluster-databases-and-nfs-storage/</link><pubDate>Sun, 18 Aug 2024 00:00:00 -0700</pubDate><guid>https://tlake.io/blog/microk8s-cluster-databases-and-nfs-storage/</guid><description>File lock requirements With the NFS k8s storage class working and Traefik up and running, it was time to try and stand up some application containers on the new thicket (my microk8s cluster running on four Raspberry Pis).</description></item></channel></rss>